15.04.2021
12:00 Set up environment
- Visual Studio Code
- Node
- Yarn
- Git repo

12:30 T1 - Set up app boiler-plate
- Using command: yarn create react-app game-points --template typescript
- git commit -m "T1: Initial commit - app boiler plate generated by create react-app"

13:00 Write initial task list
13:15 T2 - Strip down boiler plate
- Remove CSS, test and logo
- Modify App to display Hello, Kahoot!
- git commit -m "T2: Stripped down boiler plate to create simple 'Hello, Kahoot\!'-app"

13:20 T3 - Make collectable item
- Made collectable item component as button w/ label
- Button fires onclick event with collectable item id
- Function in app handles onclick
- git commit -m "T3: Added collectable item component and console logging on click for basic proof of concept"

14:30 Wake up baby, resume tonight
- TODO: T3 - Add basic tests

20:15 T3 - Adding basic test
- git commit -m "T3: Added basic testing for collectable item component.  Updated log.  Made small aesthetic code adjustments"

20:45 T3 - Adding basic CSS
- git commit -m "T3: Added basic CSS for sizing collectable item component."

20:50 T3 - Move collectable item stuff to own folder
- Collectable item stuff (component, test, types, etc) substantial enough to have own folder in folder structure
- git commit -m "T3: Refactored collectable item-related code under own folder"

20:55 T4 - Make game-zone (section at left)
- New component that displays the text "Kahoot! Points" at the top and renders buttons A-D underneath, in a scrollable section (CSS)
- git commit -m "T4: Created basic GameZone component for left hand side with header and single collectable item."
- git commit -m "T2: Removed unneeded images from public and updated manifest"
- Loop over A-D and add props/state so that everything is sent in from App
- git commit -m "T4: Render collectable items A-D in game zone.  Added types for game zone and sent in props from App"
- git commit -m "T4: Moved all static strings from GameZone component to props"
- Add tests
- git commit -m "T4: Added basic tests for testing game zone renders correctly"
- Sort CSS
- git commit -m "T4: Added CSS for game zone"
- git commit -m "T4: Refactored game name (Points) to props"

22:35 Finish for day
- Tomorrow: move on to do scoreboard stuff

16.04.2021
12:00 T5 - make scoreboard item
- Scoreboard item should take an ICollectableItem, a quantity, and a score
- Tabular data, so use tr, td for accessibility
- git commit -m "T5: Made first version of scoreboard item, with tests and basic css"

12:40 Refactor CSS + App
- Move app to own folder, and move common CSS there
- git commit -m "Moved App to own folder and refactored common CSS to App.css"

12:50 T6 - make scoreboard list
- Like lower section of gamezone, take in array of scoreboard items and display
- git commit -m "T6: Made scoreboard item list with CSS.  Moved some CSS to App.css.  Tests remaining."
- Refactoring GameZone tests, as I forgot to update them when I removed logoClassName from props
- git commit -m "T4: Refactored game zone tests to align with current props"
- git commit -m "T4: Removing unneeded async from game zone tests"
- git commit -m "T4: Removing meaningless game zone test"
- Scoreboard item list tests, similar to gamezone tests for lower section, also ensure that empty or negative quantities do not appear in list
- git commit -m "T6: Added tests for scoreboard item list"

14:05 T7 - make scoreboard bonus section
- Simply display text and number, like scoreboard item, but even simpler
- git commit -m "T7: Made scoreboard bonus totalizer section, with CSS and tests"

14:30 Wake up baby, resume tonight
- Scoreboard totalizer, new game button, then put it altogether in a game component

20:00 T8 - make scoreboard total section
- git commit -m "T8: Made scoreboard total component, with CSS and tests"

20:20 T9 - make new game button
- Added some more tasks to task list: game component, get settings from json file
- git commit -m "Added tasks to task list: refactor types; make game component; get settings from json file."
- git commit -m "small refactoring of CSS for CollectableItem - use new class instead of element button"
- Made new game button, based on collectable item.  Clicking writes action to console currently.
- git commit -m "T9: Made new game button, with CSS and tests"

20:55 T10 - Write scoring function
- The meat of the project, and also the part that is probably the most different to what I'm used to in Svelte.  Here, we need to update the state across each sub-component, something we get out-of-the-box with Svelte.
- Read about lifting state up in react, need to do some more thinking about this.

21:30 T12 - Refactor types
- Added task to task list
- git commit -m "Added new task to task list - refactor strings in components to lang pattern, as appropriate"
- Remove unneeded namespace prefixes in type declarations
- git commit -m "Refactored type declarations to exclude unneeded namespace prefixes"

21:40 T13 - Make game component
- Encapsulate everything in a game component, loaded from the App function
- git commit -m "T13: Made scoreboard component with tests"
- git commit -m "T13: Made game component encapsulating gamezone and scoreboard, with render tests"
- git commit -m "Added refactoring tasks to task list"

22:30 Time to sleep
- Tomorrow, work on T10, T11, T14

17.04.2021
12:15 T10 - Write scoring function
- First I need to solve the problem of how to make the subcomponents update when the state in the parent components updates.  React documentation describes a solution here: https://reactjs.org/docs/lifting-state-up.html
- git commit -m "Lifted up state for bonus and total to game component. Added functions for handling item collection with dummy data as appropriate"
- git commit -m "Marked completed tasks with +-sign in task list"
- ^^ These should have been prefixed with T10, woops :(
- Now that the gamezone and scoreboard are connected, let's work on the scoring function.  First update score based on unit total, then work in bonuses.

14:30 Wake up baby

20:00 T10 - write scoring functions
- Re-start computer :/
- Finished writing total function and item total functions, start on bonus calculation
- git commit m "Added functions for calculating total per scorebaord item, grand total, and bonus amount."
- git commit -m "Added new task to add sanity checks for values and to complete styling."
- ^^ These should have been prefixed with T10, woops :(

20:45 T11 - write new game functionality
- New function to handle button click
- Reset scoreboard item values to 0, reset total and bonus total to 0
- git commit -m "Implemented new game functionality.  Moved game reset function to Game component and refactored naming; adjusted some whitespace"
- ^^ These should have been prefixed with T11, woops :(
- git commit -m "Marked T10 and T11 as done"

21:05 T18 - complete styling
- Would be nice to incorporate colours from Kahoot, so check their website for colour palette/existing CSS I can borrow
- git commit -m "T18: Added styling for game.  Refactored game zone class name to static string.  Added button colors.  Added player items heading."

23:30 Quittin' time
- git commit -m "Added new task to task list for making scoreboard items from collectable items passed in"
- git commit -m "Fixed tests after all that refactoring..."

12:05 Some finesse
- git commit -m "Added new tasks to task list for extracting the score calculation code, making outstanding tests, and code clean-up"
- Sort scoreboard items by points, quanity, and then alphabetically for a more exciting user experience
- git commit -m "T13: Added sorting of scorebaord items when score is updated"
- git commit -m "T18: Added padding to left of header to match Kahoot website; improved collectabel item representation in scoreboard with border matching button representation in gamezone"
- git commit -m "T15: Moved gamezone strings into lang encapsulation"
- git commit -m "T15: Removed unneeded interface for scoreboard item list and marked task as complete"
- T16, refactoring naming on new game button already done, marking as done in task list
- T19, base scoreboard items on collectable items specified
- git commit -m "T19: Changed scoreboard items to be based on collectable items specified for sanity reasons"
- Remove scoring code into own helper class
- git commit -m "T20: Refactored scoring code into own PointsCalculator helper class"
- git commit -m "Added new task because the scoreboard CSS is still a bit buggy"

13:40 T22 - Remaining tests, but probably need to fix some first...
- git commit -m "T22: Fixed tests broken by refactoring"
- Integration testing: new game functionality, collect item functionality

14:20 Baby waking up early today
- Continue with end-to-end integration testing this evening

19:30 T22 - Integration testing
- Added tests for testing that button presses in gamezone has desired effect on scoreboard
- Added tests for testing new game functionality
- Refactored test values into separate folder and load from there
- Renamed scoreboardLang.plyerItems to scoreboardHeading
- git commit -m "T22: Added integration tests for collectable item collection and new game functionality.  Refactored test values into separate folder for all tests to share.  Renamed scoreboardLang.plyerItems to scoreboardHeading as it is a better name.  Updated task list."

22:15 T23 - Small CSS improvements
- Added border style on focus for enhanced accessibility
- Made table take up all available space
- Adjust bonus and total margins
- git commit -m "T23: Added button focus style for enhanced accessibility.  Minor adjustments to table width, and bonus and total margins"

22:20 T14 - Get game settings/props
- Just like with test, refactor game settings into own settings file
- git commit -m "T14: Moved game settings to own settings file"

22:30 T21 - Review own code and add comments, clean-up, etc
- Minor whitespace change on PointsCalculator
- Added comments to settings file
- Moved matcher function from test to testHelpers file
- Renamed testValues to testSettings and commented
- Removed unused imports
- Sorted interface members alphabetically
- Commented Scoreboard files
- Commented Helpers files
- Commented GameZone files
- Commented Game files
- Commented Controls files
- Commented CollectableItem files
- Commented on App files
- Updated read-me
- git commit -m "T21: Reviewed, commented, and tidied up code.  Updated read-me file."
- git commit -m "T21: Fixed minor formatting issue in read-me file."

