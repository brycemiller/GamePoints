15.04.2021
12:00 Set up environment
- Visual Studio Code
- Node
- Yarn
- Git repo

12:30 T1 - Set up app boiler-plate
- Using command: yarn create react-app game-points --template typescript
- git commit -m "T1: Initial commit - app boiler plate generated by create react-app"

13:00 Write initial task list
13:15 T2 - Strip down boiler plate
- Remove CSS, test and logo
- Modify App to display Hello, Kahoot!
- git commit -m "T2: Stripped down boiler plate to create simple 'Hello, Kahoot\!'-app"

13:20 T3 - Make collectable item
- Made collectable item component as button w/ label
- Button fires onclick event with collectable item id
- Function in app handles onclick
- git commit -m "T3: Added collectable item component and console logging on click for basic proof of concept"

14:30 Wake up baby, resume tonight
- TODO: T3 - Add basic tests

20:15 T3 - Adding basic test
- git commit -m "T3: Added basic testing for collectable item component.  Updated log.  Made small aesthetic code adjustments"

20:45 T3 - Adding basic CSS
- git commit -m "T3: Added basic CSS for sizing collectable item component."

20:50 T3 - Move collectable item stuff to own folder
- Collectable item stuff (component, test, types, etc) substantial enough to have own folder in folder structure
- git commit -m "T3: Refactored collectable item-related code under own folder"

20:55 T4 - Make game-zone (section at left)
- New component that displays the text "Kahoot! Points" at the top and renders buttons A-D underneath, in a scrollable section (CSS)
- git commit -m "T4: Created basic GameZone component for left hand side with header and single collectable item."
- git commit -m "T2: Removed unneeded images from public and updated manifest"
- Loop over A-D and add props/state so that everything is sent in from App
- git commit -m "T4: Render collectable items A-D in game zone.  Added types for game zone and sent in props from App"
- git commit -m "T4: Moved all static strings from GameZone component to props"
- Add tests
- git commit -m "T4: Added basic tests for testing game zone renders correctly"
- Sort CSS
- git commit -m "T4: Added CSS for game zone"
- git commit -m "T4: Refactored game name (Points) to props"

22:35 Finish for day
- Tomorrow: move on to do scoreboard stuff

16.04.2021
12:00 T5 - make scoreboard item
- Scoreboard item should take an ICollectableItem, a quantity, and a score
- Tabular data, so use tr, td for accessibility
- git commit -m "T5: Made first version of scoreboard item, with tests and basic css"

12:40 Refactor CSS + App
- Move app to own folder, and move common CSS there
- git commit -m "Moved App to own folder and refactored common CSS to App.css"

12:50 T6 - make scoreboard list
- Like lower section of gamezone, take in array of scoreboard items and display
- git commit -m "T6: Made scoreboard item list with CSS.  Moved some CSS to App.css.  Tests remaining."
- Refactoring GameZone tests, as I forgot to update them when I removed logoClassName from props
- git commit -m "T4: Refactored game zone tests to align with current props"
- git commit -m "T4: Removing unneeded async from game zone tests"
- git commit -m "T4: Removing meaningless game zone test"
- Scoreboard item list tests, similar to gamezone tests for lower section, also ensure that empty or negative quantities do not appear in list
- git commit -m "T6: Added tests for scoreboard item list"

14:05 T7 - make scoreboard bonus section
- Simply display text and number, like scoreboard item, but even simpler
- git commit -m "T7: Made scoreboard bonus totalizer section, with CSS and tests"

14:30 Wake up baby, resume tonight
- Scoreboard totalizer, new game button, then put it altogether in a game component

20:00 T8 - make scoreboard total section
- git commit -m "T8: Made scoreboard total component, with CSS and tests"

20:20 T9 - make new game button
- Added some more tasks to task list: game component, get settings from json file
- git commit -m "Added tasks to task list: refactor types; make game component; get settings from json file."
- git commit -m "small refactoring of CSS for CollectableItem - use new class instead of element button"
- Made new game button, based on collectable item.  Clicking writes action to console currently.
- git commit -m "T9: Made new game button, with CSS and tests"

20:55 T10 - Write scoring function
- The meat of the project, and also the part that is probably the most different to what I'm used to in Svelte.  Here, we need to update the state across each sub-component, something we get out-of-the-box with Svelte.
- Read about lifting state up in react, need to do some more thinking about this.

21:30 T12 - Refactor types
- Added task to task list
- git commit -m "Added new task to task list - refactor strings in components to lang pattern, as appropriate"
- Remove unneeded namespace prefixes in type declarations
- git commit -m "Refactored type declarations to exclude unneeded namespace prefixes"

21:40 T13 - Make game component
- Encapsulate everything in a game component, loaded from the App function
- git commit -m "T13: Made scoreboard component with tests"
- git commit -m "T13: Made game component encapsulating gamezone and scoreboard, with render tests"



